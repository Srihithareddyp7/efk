version: "2"
services:
  nginx:
    build: nginx/
    networks:
    - reverse-proxy
    container_name: nginx
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
     - ${CERTS_PATH}:/etc/nginx/certs:ro
     - /etc/nginx/conf.d
     - /etc/nginx/vhost.d
     - /usr/share/nginx/html
     - /etc/nginx/stream
    ports:
      - "80:80"
      - "443:443"
      - "24224:24224"
      - "24225:24225"
  nginx-gen1:
    image: jwilder/docker-gen:0.5.0
    networks:
    - reverse-proxy
    container_name: nginx-gen1
    volumes_from:
      - nginx
    volumes:
      - ./nginx1.tmpl:/etc/docker-gen/templates/nginx1.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    command: -notify-sighup nginx -wait 5s:30s /etc/docker-gen/templates/nginx1.tmpl /etc/nginx/conf.d/default.conf
    links:
      - nginx
  nginx-gen2:
    image: jwilder/docker-gen:0.5.0
    networks:
    - reverse-proxy
    container_name: nginx-gen2
    volumes_from:
      - nginx
    volumes:
      - ./nginx2.tmpl:/etc/docker-gen/templates/nginx2.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    command: -notify-sighup nginx -wait 5s:30s /etc/docker-gen/templates/nginx2.tmpl /etc/nginx/stream/stream1.conf
    links:
      - nginx

  nginx-gen3:
    image: jwilder/docker-gen:0.5.0
    networks:
    - reverse-proxy
    container_name: nginx-gen3
    volumes_from:
      - nginx
    volumes:
      - ./nginx3.tmpl:/etc/docker-gen/templates/nginx3.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    command: -notify-sighup nginx -wait 5s:30s /etc/docker-gen/templates/nginx3.tmpl /etc/nginx/stream/stream2.conf
    links:
      - nginx

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.7
    networks:
    - reverse-proxy
    container_name: nginx-letsencrypt
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen1
      - DEBUG=false
    volumes_from:
      - nginx
    volumes:
      - ${CERTS_PATH}:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

# Use comman network interface esnet between all containers
networks:
  reverse-proxy:
    external:
      name: reverse-proxy
